  int length;
int angle;
int height;
int farheight;
int farlength;
int distance;
long duration;
int diff;
int rdiff;
int rlength;


void setup() {
  // put your setup code here, to run once:
    pinMode(2,
             OUTPUT); //blue(angle)
    pinMode(3, INPUT);
    pinMode(5, OUTPUT);//white(down)
    pinMode(6,INPUT);
    pinMode(10, OUTPUT);//right
    pinMode(9, OUTPUT);//left buzzer
    pinMode(11, OUTPUT); //no board(front)
    pinMode(12, INPUT);


    // Serial Communication is starting with 9600 of
    // baudrate speed
    Serial.begin(9600);
 
    // The text to be printed in serial monitor
    Serial.println("Distance measurement using Arduino Uno.");
    delay(5);
}


void loop() {
  // put your main code here, to run repeatedly:
    length = dist(11,12);
    delayMicroseconds(50);
    angle = dist(2,3);
    delayMicroseconds(50);
    height = dist(5,6);
    delayMicroseconds(50);
    Serial.println(angle);
    Serial.println(length);
    Serial.println(height);
    Serial.println("--------------------------------------------");
    farheight = angle * sin(0.7854);
    farlength = angle * sin(0.7854);
    diff = height - farheight;
    if((length!=farlength)&&((diff>=1)||(diff<=-1))&&((diff<=60)||(diff>=-60))){
      rdiff = diff/5;
      if(diff > 0){
         tone(9, 1760, 275); //1760 A6 1; 37 D1 0
         delay(275*1.3);
         if(rdiff == 0){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 1){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 2){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 3){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 4){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 5){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 6){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 7){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 8){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 9){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 10){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 11){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == 12){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         delay(1000);
         buzzlength(farlength);
      }
      else if(diff < 0){
         tone(9, 37, 275); //1760 A6 1; 37 D1 0
         delay(275*1.3);
         if(rdiff == 0){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -1){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -2){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -3){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -4){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -5){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -6){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -7){
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -8){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -9){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -10){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -11){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         else if(rdiff == -12){
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 1760, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
            tone(9, 37, 275); //1760 A6 1; 37 D1 0
            delay(275*1.3);
         }
         delay(1000);
         buzzlength(farlength);
      }
    }
    else if((length<farlength)&&(diff< -60)){
      tone(9, 3520, 500); //1760 A6 1; 37 D1 0
         delay(500*1.3);
      tone(9, 3520, 275); //1760 A6 1; 37 D1 0
         delay(500*1.3);
      buzzlength(farlength);
    }
    else if(length>farlength){
      buzzlength(farlength);}
    else{buzzlength(length);}
    delay(500);
}




int dist(int trigPin, int echoPin){
      digitalWrite(trigPin, LOW);
    delayMicroseconds(2); // wait for 2 ms to avoid
                          // collision in serial monitor
 
    digitalWrite(
        trigPin,
        HIGH); // turn on the Trigger to generate pulse
    delayMicroseconds(
        10); // keep the trigger "ON" for 10 ms to generate
             // pulse for 10 ms.
 
    digitalWrite(trigPin,
                 LOW); // Turn off the pulse trigger to stop
                       // pulse generation
 
    // If pulse reached the receiver echoPin
    // become high Then pulseIn() returns the
    // time taken by the pulse to reach the
    // receiver
 
    duration = pulseIn(echoPin, HIGH);
    distance
        = duration * 0.0344 / 2; // Expression to calculate
                                 // distance using time
        delay(50);


    return distance;
}//distance calculation
int buzzlength(int dis){
    rlength= dis/25;
    if(rlength <= 1){
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else if(rlength == 2){
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else if(rlength == 3){
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else if(rlength == 4){
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else if(rlength == 5){
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else if(rlength == 6){
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 37, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else if(rlength == 7){
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
      tone(10, 1760, 275); //1760 A6 1; 37 D1 0
      delay(275*1.3);
    }
    else{}
}

